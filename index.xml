<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>LoveIt</title>
        <link>https://tzz-v.github.io/myblog/</link>
        <description>Hugo theme - LoveIt</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>:cowboy_hat_face: (肆码难椎)</managingEditor>
            <webMaster>:cowboy_hat_face: (肆码难椎)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 06 Mar 2023 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://tzz-v.github.io/myblog/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>期待Web Component的未来</title>
    <link>https://tzz-v.github.io/myblog/%E6%9C%9F%E5%BE%85web-component%E7%9A%84%E6%9C%AA%E6%9D%A5/</link>
    <pubDate>Mon, 06 Mar 2023 00:00:00 &#43;0000</pubDate>
    <author>肆码难椎</author>
    <guid>https://tzz-v.github.io/myblog/%E6%9C%9F%E5%BE%85web-component%E7%9A%84%E6%9C%AA%E6%9D%A5/</guid>
    <description><![CDATA[Web Component 本身不是一个规范，而是一组技术的应用，Web Component 现阶段主要分为三部分：Custom element、Shadow DOM、Template。通]]></description>
</item>
<item>
    <title>Docker初识</title>
    <link>https://tzz-v.github.io/myblog/docker%E5%88%9D%E8%AF%86/</link>
    <pubDate>Thu, 23 Feb 2023 21:57:40 &#43;0800</pubDate>
    <author>肆码难椎</author>
    <guid>https://tzz-v.github.io/myblog/docker%E5%88%9D%E8%AF%86/</guid>
    <description><![CDATA[前言 在我这可以，在你那怎么就跑不起来了？ 在以前，项目开发完成后，测试/运维需要从头到尾搭建环境、调试。这样的话经常出现在开发的口中，不过，随]]></description>
</item>
<item>
    <title>ahooks中的核心hook-useRequest（下）</title>
    <link>https://tzz-v.github.io/myblog/ahooks%E4%B8%AD%E7%9A%84%E6%A0%B8%E5%BF%83hook-userequest%E4%B8%8B/</link>
    <pubDate>Sat, 26 Nov 2022 16:01:23 &#43;0800</pubDate>
    <author>肆码难椎</author>
    <guid>https://tzz-v.github.io/myblog/ahooks%E4%B8%AD%E7%9A%84%E6%A0%B8%E5%BF%83hook-userequest%E4%B8%8B/</guid>
    <description><![CDATA[开启掘金成长之旅！这是我参与「掘金日新计划 · 12 月更文挑战」的第 2 天，点击查看活动详情 前言 之前大致说了下 useRequest hook 的基本功能的实现。但 useRequest 的强大不止于]]></description>
</item>
<item>
    <title>ahooks中的核心hook-useRequest（上）</title>
    <link>https://tzz-v.github.io/myblog/ahooks%E4%B8%AD%E7%9A%84%E6%A0%B8%E5%BF%83hook-userequest%E4%B8%8A/</link>
    <pubDate>Wed, 23 Nov 2022 16:01:23 &#43;0800</pubDate>
    <author>肆码难椎</author>
    <guid>https://tzz-v.github.io/myblog/ahooks%E4%B8%AD%E7%9A%84%E6%A0%B8%E5%BF%83hook-userequest%E4%B8%8A/</guid>
    <description><![CDATA[开启掘金成长之旅！这是我参与「掘金日新计划 · 12 月更文挑战」的第 1 天，点击查看活动详情 前言 useRequest 是一个异步数据管理的 hooks，是 ahooks Hooks 库的核心 ho]]></description>
</item>
<item>
    <title>react-router v6</title>
    <link>https://tzz-v.github.io/myblog/react-router-v6/</link>
    <pubDate>Sun, 23 Oct 2022 21:57:40 &#43;0800</pubDate>
    <author>肆码难椎</author>
    <guid>https://tzz-v.github.io/myblog/react-router-v6/</guid>
    <description><![CDATA[前言 之前一直负责老项目的迭代，而且很少关注 router 相关的代码，直到上个月公司开了一个新项目，当我着手开始配置路由时突然发现，嗯？Switch 标签咋]]></description>
</item>
<item>
    <title>js高程学习笔记</title>
    <link>https://tzz-v.github.io/myblog/js%E9%AB%98%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
    <pubDate>Mon, 10 Jan 2022 21:57:40 &#43;0800</pubDate>
    <author>肆码难椎</author>
    <guid>https://tzz-v.github.io/myblog/js%E9%AB%98%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
    <description><![CDATA[红宝书（学习笔记） 三、语言基础 null 和 undefined（3.4） null: 表示一个空对象指针。这也是 typeof null 会返回‘object’的原因。 undefine]]></description>
</item>
<item>
    <title>数据结构（五）排序</title>
    <link>https://tzz-v.github.io/myblog/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BA%94%E6%8E%92%E5%BA%8F/</link>
    <pubDate>Sat, 08 Jan 2022 21:57:40 &#43;0800</pubDate>
    <author>肆码难椎</author>
    <guid>https://tzz-v.github.io/myblog/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BA%94%E6%8E%92%E5%BA%8F/</guid>
    <description><![CDATA[排序的分类 时间复杂度（O(n^2)）: 冒泡、插入、选择； 时间复杂度（O(nLogn)）: 快排，归并； 时间复杂度（O(n)）: 桶，计数，基数；]]></description>
</item>
<item>
    <title>数据结构（四）递归</title>
    <link>https://tzz-v.github.io/myblog/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9B%9B%E9%80%92%E5%BD%92/</link>
    <pubDate>Fri, 07 Jan 2022 21:57:40 &#43;0800</pubDate>
    <author>肆码难椎</author>
    <guid>https://tzz-v.github.io/myblog/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9B%9B%E9%80%92%E5%BD%92/</guid>
    <description><![CDATA[递归 描述： 一种非常高效、简洁的编程技巧。函数调用自身的方式称为递归调用，调用成为递，返回称为归； 正确姿势：找到如何将大问题分解为小问题的规律]]></description>
</item>
<item>
    <title>数据结构（三）栈与队列</title>
    <link>https://tzz-v.github.io/myblog/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%89%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/</link>
    <pubDate>Thu, 06 Jan 2022 21:57:40 &#43;0800</pubDate>
    <author>肆码难椎</author>
    <guid>https://tzz-v.github.io/myblog/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%89%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/</guid>
    <description><![CDATA[栈 栈是一种操作受限的线性表，只允许在一端插入（push()）和删除（pop()）数据。 特性： 后进者先出，先进者后出 使用场景： 如浏览器的前进、]]></description>
</item>
<item>
    <title>数据结构（二）数组与链表</title>
    <link>https://tzz-v.github.io/myblog/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BA%8C%E6%95%B0%E7%BB%84%E5%92%8C%E9%93%BE%E8%A1%A8/</link>
    <pubDate>Tue, 04 Jan 2022 21:57:40 &#43;0800</pubDate>
    <author>肆码难椎</author>
    <guid>https://tzz-v.github.io/myblog/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BA%8C%E6%95%B0%E7%BB%84%E5%92%8C%E9%93%BE%E8%A1%A8/</guid>
    <description><![CDATA[数组 数组是一种线性表数据结构，用一组连续的内存空间来存储数据 线性表： 线性表就是数据排成像一条线一样的结构，每个线性表上的数据最多只有前和后两]]></description>
</item>
</channel>
</rss>
